{{- if .Values.upgradeCRDs.enabled }}
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gatekeeper-admin-upgrade-crds
  labels:
    {{- include "gatekeeper.commonLabels" . | nindent 4 }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: "hook-succeeded,before-hook-creation"
    helm.sh/hook-weight: "1"
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "create", "update", "patch"]
{{- with .Values.upgradeCRDs.extraRules }}
  {{- toYaml . | nindent 2 }}
{{- end }}
{{- end }}
---
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gatekeeper-admin-upgrade-crds
  labels:
    {{- include "gatekeeper.commonLabels" . | nindent 4 }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: "hook-succeeded,before-hook-creation"
    helm.sh/hook-weight: "1"
subjects:
  - kind: ServiceAccount
    name: gatekeeper-admin-upgrade-crds
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: gatekeeper-admin-upgrade-crds
  apiGroup: rbac.authorization.k8s.io
{{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    {{- include "gatekeeper.commonLabels" . | nindent 4 }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: gatekeeper-admin-upgrade-crds
  namespace: '{{ .Release.Namespace }}'
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: "hook-succeeded,before-hook-creation"
    helm.sh/hook-weight: "1"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: gatekeeper-update-crds-hook
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "gatekeeper.mandatoryLabels" . | nindent 4 }}
    {{- include "gatekeeper.commonLabels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: "hook-succeeded,before-hook-creation"
spec:
  backoffLimit: 3
  template:
    metadata:
      name: gatekeeper-update-crds-hook
      annotations:
        {{- toYaml .Values.podAnnotations | trim | nindent 8 }}
      labels:
        {{- include "gatekeeper.podLabels" . | nindent 8 }}
        {{- include "gatekeeper.mandatoryLabels" . | nindent 8 }}
        {{- include "gatekeeper.commonLabels" . | nindent 8 }}
    spec:
      serviceAccountName: gatekeeper-admin-upgrade-crds
      restartPolicy: Never
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.image.pullSecrets | nindent 8 }}
      {{- end }}
      {{- if .Values.upgradeCRDs.priorityClassName }}
      priorityClassName: {{ .Values.upgradeCRDs.priorityClassName }}
      {{- end }}
      containers:
      - name: crds-upgrade
        {{- if .Values.preInstall.crdRepository.image.repository }}
          {{- if not .Values.preInstall.crdRepository.image.tag }}
        image: '{{ .Values.preInstall.crdRepository.image.repository }}'
          {{- else }}
        image: '{{ .Values.preInstall.crdRepository.image.repository }}:{{ .Values.preInstall.crdRepository.image.tag }}'
          {{- end }}
        {{- else }}
          {{- if not .Values.image.release }}
        image: '{{ .Values.image.crdRepository }}'
          {{- else }}
        image: '{{ .Values.image.crdRepository }}:{{ .Values.image.release }}'
          {{- end }}
        {{- end }}
        imagePullPolicy: '{{ .Values.image.pullPolicy }}'
        args:
        - apply
        - -f
        - crds/
        resources:
          {{- toYaml .Values.crds.resources | nindent 10 }}
        securityContext:
          {{- if .Values.enableRuntimeDefaultSeccompProfile }}
          seccompProfile:
            type: RuntimeDefault
          {{- end }}
          {{- toYaml .Values.crds.securityContext | nindent 10 }}
      {{- with .Values.crds }}
      affinity:
        {{- toYaml .affinity | nindent 8 }}
      tolerations:
        {{- toYaml .tolerations | nindent 8 }}
      nodeSelector:
        {{- toYaml .nodeSelector | nindent 8 }}
      {{- end }}
{{- end }}
