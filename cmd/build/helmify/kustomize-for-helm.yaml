apiVersion: v1
kind: Service
metadata:
  name: gatekeeper-webhook-service
  namespace: gatekeeper-system
spec:
  HELMSUBST_SERVICE_TYPE: ""
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: configs.config.gatekeeper.sh
status: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: constrainttemplates.templates.gatekeeper.sh
status: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: constrainttemplatepodstatuses.status.gatekeeper.sh
status: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: constraintpodstatuses.status.gatekeeper.sh
status: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mutatorpodstatuses.status.gatekeeper.sh
status: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: assignmetadata.mutations.gatekeeper.sh
status: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: assign.mutations.gatekeeper.sh
status: null
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gatekeeper-controller-manager
  namespace: gatekeeper-system
spec:
  replicas: HELMSUBST_DEPLOYMENT_REPLICAS
  template:
    metadata:
      annotations:
        HELMSUBST_ANNOTATIONS: ""
    spec:
      containers:
        - name: manager
          args:
            - --port=8443
            - --logtostderr
            - --log-denies={{ .Values.logDenies }}
            - --emit-admission-events={{ .Values.emitAdmissionEvents }}
            - --log-level={{ .Values.logLevel }}
            - --exempt-namespace={{ .Release.Namespace }}
            - --operation=webhook
            - --enable-mutation={{ .Values.experimentalEnableMutation}}
            - HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_DISABLED_BUILTIN
            - HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_EXEMPT_NAMESPACES
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.release }}"
          resources:
            HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_CONTAINER_RESOURCES: ""
      nodeSelector:
        HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_NODE_SELECTOR: ""
      affinity:
        HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_AFFINITY: ""
      tolerations:
        HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_TOLERATIONS: ""
      imagePullSecrets:
        HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_IMAGE_PULL_SECRETS: ""
      hostNetwork: HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_HOST_NETWORK
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gatekeeper-audit
  namespace: gatekeeper-system
spec:
  template:
    metadata:
      annotations:
        HELMSUBST_ANNOTATIONS: ""
    spec:
      containers:
        - name: manager
          args:
            - --audit-interval={{ .Values.auditInterval }}
            - --log-level={{ .Values.logLevel }}
            - --constraint-violations-limit={{ .Values.constraintViolationsLimit }}
            - --audit-from-cache={{ .Values.auditFromCache }}
            - --audit-chunk-size={{ .Values.auditChunkSize }}
            - --audit-match-kind-only={{ .Values.auditMatchKindOnly }}
            - --emit-audit-events={{ .Values.emitAuditEvents }}
            - --operation=audit
            - --operation=status
            - --logtostderr
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.release }}"
          resources:
            HELMSUBST_DEPLOYMENT_AUDIT_CONTAINER_RESOURCES: ""
      nodeSelector:
        HELMSUBST_DEPLOYMENT_AUDIT_NODE_SELECTOR: ""
      affinity:
        HELMSUBST_DEPLOYMENT_AUDIT_AFFINITY: ""
      tolerations:
        HELMSUBST_DEPLOYMENT_AUDIT_TOLERATIONS: ""
      imagePullSecrets:
        HELMSUBST_DEPLOYMENT_AUDIT_IMAGE_PULL_SECRETS: ""
      hostNetwork: HELMSUBST_DEPLOYMENT_AUDIT_HOST_NETWORK
---
apiVersion: v1
kind: Secret
metadata:
  annotations: HELMSUBST_SECRET_ANNOTATIONS
  name: gatekeeper-webhook-server-cert
  namespace: gatekeeper-system
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    gatekeeper.sh/system: "yes"
  name: gatekeeper-validating-webhook-configuration
webhooks:
- clientConfig:
    service:
      name: gatekeeper-webhook-service
      namespace: gatekeeper-system
      path: /v1/admit
  name: validation.gatekeeper.sh
  timeoutSeconds: HELMSUBST_VALIDATING_WEBHOOK_TIMEOUT
  failurePolicy: HELMSUBST_VALIDATING_WEBHOOK_FAILURE_POLICY
  rules:
  - apiGroups:
    - "*"
    apiVersions:
    - '*'
    operations: HELMSUBST_VALIDATING_WEBHOOK_OPERATION_RULES
    resources:
    - '*'
- clientConfig:
    service:
      name: gatekeeper-webhook-service
      namespace: gatekeeper-system
      path: /v1/admitlabel
  name: check-ignore-label.gatekeeper.sh
  timeoutSeconds: HELMSUBST_VALIDATING_WEBHOOK_TIMEOUT
  failurePolicy: HELMSUBST_VALIDATING_WEBHOOK_CHECK_IGNORE_FAILURE_POLICY
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: gatekeeper-controller-manager
  namespace: gatekeeper-system
spec:
  minAvailable: HELMSUBST_PDB_CONTROLLER_MANAGER_MINAVAILABLE
  selector:
    matchLabels:
      control-plane: controller-manager
      gatekeeper.sh/operation: webhook
      gatekeeper.sh/system: "yes"
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: critical-pods
  namespace: system
spec:
  hard:
    pods: HELMSUBST_RESOURCEQUOTA_POD_LIMIT
  scopeSelector:
    matchExpressions:
    - operator: In
      scopeName: PriorityClass
      values:
      - HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_PRIORITY_CLASS_NAME
      - HELMSUBST_DEPLOYMENT_AUDIT_PRIORITY_CLASS_NAME
