//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by conversion-gen. DO NOT EDIT.

package v1beta1

import (
	unsafe "unsafe"

	unversioned "github.com/open-policy-agent/frameworks/constraint/pkg/apis/externaldata/unversioned"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Provider)(nil), (*unversioned.Provider)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Provider_To_unversioned_Provider(a.(*Provider), b.(*unversioned.Provider), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*unversioned.Provider)(nil), (*Provider)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_Provider_To_v1beta1_Provider(a.(*unversioned.Provider), b.(*Provider), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ProviderList)(nil), (*unversioned.ProviderList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ProviderList_To_unversioned_ProviderList(a.(*ProviderList), b.(*unversioned.ProviderList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*unversioned.ProviderList)(nil), (*ProviderList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_ProviderList_To_v1beta1_ProviderList(a.(*unversioned.ProviderList), b.(*ProviderList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ProviderSpec)(nil), (*unversioned.ProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ProviderSpec_To_unversioned_ProviderSpec(a.(*ProviderSpec), b.(*unversioned.ProviderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*unversioned.ProviderSpec)(nil), (*ProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_ProviderSpec_To_v1beta1_ProviderSpec(a.(*unversioned.ProviderSpec), b.(*ProviderSpec), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_Provider_To_unversioned_Provider(in *Provider, out *unversioned.Provider, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_ProviderSpec_To_unversioned_ProviderSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_Provider_To_unversioned_Provider is an autogenerated conversion function.
func Convert_v1beta1_Provider_To_unversioned_Provider(in *Provider, out *unversioned.Provider, s conversion.Scope) error {
	return autoConvert_v1beta1_Provider_To_unversioned_Provider(in, out, s)
}

func autoConvert_unversioned_Provider_To_v1beta1_Provider(in *unversioned.Provider, out *Provider, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_unversioned_ProviderSpec_To_v1beta1_ProviderSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_unversioned_Provider_To_v1beta1_Provider is an autogenerated conversion function.
func Convert_unversioned_Provider_To_v1beta1_Provider(in *unversioned.Provider, out *Provider, s conversion.Scope) error {
	return autoConvert_unversioned_Provider_To_v1beta1_Provider(in, out, s)
}

func autoConvert_v1beta1_ProviderList_To_unversioned_ProviderList(in *ProviderList, out *unversioned.ProviderList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]unversioned.Provider)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1beta1_ProviderList_To_unversioned_ProviderList is an autogenerated conversion function.
func Convert_v1beta1_ProviderList_To_unversioned_ProviderList(in *ProviderList, out *unversioned.ProviderList, s conversion.Scope) error {
	return autoConvert_v1beta1_ProviderList_To_unversioned_ProviderList(in, out, s)
}

func autoConvert_unversioned_ProviderList_To_v1beta1_ProviderList(in *unversioned.ProviderList, out *ProviderList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Provider)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_unversioned_ProviderList_To_v1beta1_ProviderList is an autogenerated conversion function.
func Convert_unversioned_ProviderList_To_v1beta1_ProviderList(in *unversioned.ProviderList, out *ProviderList, s conversion.Scope) error {
	return autoConvert_unversioned_ProviderList_To_v1beta1_ProviderList(in, out, s)
}

func autoConvert_v1beta1_ProviderSpec_To_unversioned_ProviderSpec(in *ProviderSpec, out *unversioned.ProviderSpec, s conversion.Scope) error {
	out.URL = in.URL
	out.Timeout = in.Timeout
	out.CABundle = in.CABundle
	return nil
}

// Convert_v1beta1_ProviderSpec_To_unversioned_ProviderSpec is an autogenerated conversion function.
func Convert_v1beta1_ProviderSpec_To_unversioned_ProviderSpec(in *ProviderSpec, out *unversioned.ProviderSpec, s conversion.Scope) error {
	return autoConvert_v1beta1_ProviderSpec_To_unversioned_ProviderSpec(in, out, s)
}

func autoConvert_unversioned_ProviderSpec_To_v1beta1_ProviderSpec(in *unversioned.ProviderSpec, out *ProviderSpec, s conversion.Scope) error {
	out.URL = in.URL
	out.Timeout = in.Timeout
	out.CABundle = in.CABundle
	return nil
}

// Convert_unversioned_ProviderSpec_To_v1beta1_ProviderSpec is an autogenerated conversion function.
func Convert_unversioned_ProviderSpec_To_v1beta1_ProviderSpec(in *unversioned.ProviderSpec, out *ProviderSpec, s conversion.Scope) error {
	return autoConvert_unversioned_ProviderSpec_To_v1beta1_ProviderSpec(in, out, s)
}
