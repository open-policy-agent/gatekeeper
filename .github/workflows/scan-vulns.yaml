name: scan_vulns
on:
  push:
    paths-ignore:
      - ".github/workflows/website.yaml"
      - "docs/**"
      - "library/**"
      - "demo/**"
      - "deprecated/**"
      - "example/**"
      - "website/**"
      - "**.md"
      - "!cmd/build/helmify/static/README.md"
  pull_request:
    paths-ignore:
      - ".github/workflows/website.yaml"
      - "docs/**"
      - "library/**"
      - "demo/**"
      - "deprecated/**"
      - "example/**"
      - "website/**"
      - "**.md"
      - "!cmd/build/helmify/static/README.md"

permissions: read-all

jobs:
  govulncheck:
    name: "Run govulncheck"
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "1.24"
          check-latest: true
      - uses: golang/govulncheck-action@b625fbe08f3bccbe446d94fbf87fcc875a4f50ee # v1.0.4

  scan_vulnerabilities:
    name: "[Trivy] Scan for vulnerabilities"
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Check out code into the Go module directory
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Download trivy
        run: |
          pushd $(mktemp -d)
          wget https://github.com/aquasecurity/trivy/releases/download/v${{ env.TRIVY_VERSION }}/trivy_${{ env.TRIVY_VERSION }}_Linux-64bit.tar.gz
          tar zxvf trivy_${{ env.TRIVY_VERSION }}_Linux-64bit.tar.gz
          echo "$(pwd)" >> $GITHUB_PATH
        env:
          TRIVY_VERSION: "0.64.1"

      - name: Download trivy db
        run: |
          trivy image \
            --download-db-only \
            --db-repository=ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db,docker.io/aquasec/trivy-db

      - name: Run trivy on git repository
        run: |
          trivy fs --format table --ignore-unfixed --skip-dirs website --scanners vuln .

      - name: Build docker images
        run: |
          make docker-buildx \
            IMG=gatekeeper-e2e:latest

          make docker-buildx-crds \
            CRD_IMG=gatekeeper-crds:latest

      - name: Run trivy on images
        run: |
          for img in "gatekeeper-e2e:latest" "gatekeeper-crds:latest"; do
              trivy image --ignore-unfixed --pkg-types="os,library" "${img}"
          done
